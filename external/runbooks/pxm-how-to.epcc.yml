name: "pxm-how-to"
description:
  long: "Creates the Getting Started PXM Catalog (https://documentation.elasticpath.com/commerce-cloud/docs/developer/how-to/get-started-pcm.html)."
  short: "Create and manipulate the Getting Started PXM Catalog"
actions:
  create-catalog-and-publish:
    description:
      short: "Create the sample catalog and publish"
    # The syntax here is subtle for commands, each element of the array runs to completion before the next line.
    # If you start a line with | you are creating a multi line yaml string.
    # Each line will then run concurrently.
    commands:
      - epcc create pcm-hierarchy name "Major Appliances" description "Free standing appliances" slug "Major-Appliances-MA0"
      - epcc create pcm-node name=Major_Appliances name "Ranges" description "All stoves and ovens" slug "Ranges-MA1"
      - |
        epcc create pcm-node name=Major_Appliances name "Electric Ranges" description "Electric stoves and ovens" slug "Electric-Ranges-MA2" relationships.parent.data.type node relationships.parent.data.id name=Ranges
        epcc create pcm-node name=Major_Appliances name "Gas Ranges" description "Gas stoves and ovens" slug "Gas-Ranges-MA2" relationships.parent.data.type node relationships.parent.data.id name=Ranges
      - epcc create pcm-product name "BestEver Electric Range" sku "BE-Electric-Range-1a1a" slug "bestever-range-1a1a" description "This electric model offers an induction heating element and convection oven." status live commodity_type physical upc_ean \"111122223333\" mpn BE-R-1111-aaaa-1a1a
      - epcc create pcm-node-product name=Major_Appliances name=Electric_Ranges data[0].type product data[0].id name=BestEver_Electric_Range
      - epcc create pcm-product name "BestEver Gas Range" sku "BE-Gas-Range-2b2b" slug "bestever-range-2b2b" description "This gas model includes a convection oven." status live commodity_type physical upc_ean \"222233334444\" mpn BE-R-2222-bbbb-2b2b
      - epcc create pcm-node-product name=Major_Appliances name=Gas_Ranges data[0].type product data[0].id name=BestEver_Gas_Range
      - epcc create currency code GBP exchange_rate 1 format Â£{price} decimal_point "." thousand_separator , decimal_places 2 default false enabled true
      - epcc create pcm-pricebook name "Preferred Pricing" description "Catalog with pricing suitable for high-volume customers."
      - |
        epcc create pcm-product-price name=Preferred_Pricing currencies.USD.amount 300000 currencies.USD.includes_tax false currencies.GBP.amount 250000 currencies.GBP.includes_tax false sku BE-Electric-Range-1a1a
        epcc create pcm-product-price name=Preferred_Pricing currencies.USD.amount 350000 currencies.USD.includes_tax false currencies.GBP.amount 300000 currencies.GBP.includes_tax false sku BE-Gas-Range-2b2b
      - epcc create pcm-catalog name "Ranges Catalog" description "Ranges Catalog" pricebook_id name=Preferred_Pricing hierarchy_ids[0] name=Major_Appliances
      - epcc create pcm-catalog-release --save-as-alias pxm-how-to-create-catalog-and-publish-release name=Ranges_Catalog
      # Wait for Catalog to be Published
      - epcc get pcm-catalog-release --retry-while-jq '.data.meta.release_status != "PUBLISHED"' name=Ranges_Catalog pxm-how-to-create-catalog-and-publish-release
  create-catalog-rule:
    description:
      short: "Create a couple customers and a catalog rule, both customers use a password of `password`"
    commands:
      - |
        epcc create customer name "Ron Swanson" email "ron.swanson@gmail.com" password password
        epcc create customer name "Leslie Knope" email "leslie.knope@gov.com" password password
      - epcc create pcm-pricebook name "Loyal Civil Servants Pricing" description "Catalog with pricing suitable for loyal civil servants."
      - |
        epcc create pcm-product-price name=Loyal_Civil_Servants_Pricing currencies.USD.amount 200000 currencies.USD.includes_tax false currencies.GBP.amount 150000 currencies.GBP.includes_tax false sku BE-Electric-Range-1a1a
        epcc create pcm-product-price name=Loyal_Civil_Servants_Pricing currencies.USD.amount 250000 currencies.USD.includes_tax false currencies.GBP.amount 200000 currencies.GBP.includes_tax false sku BE-Gas-Range-2b2b
      - epcc create pcm-catalog name "Ranges Catalog for Special Customers" description "Ranges Catalog For Loyal Civil Servants" pricebook_id name=Loyal_Civil_Servants_Pricing hierarchy_ids[0] name=Major_Appliances
      - epcc create pcm-catalog-release --save-as-alias pxm-how-to-create-catalog-rule name=Ranges_Catalog_for_Special_Customers
      # Wait for Catalog to be Published
      - epcc get pcm-catalog-release --retry-while-jq '.data.meta.release_status != "PUBLISHED"' name=Ranges_Catalog_for_Special_Customers pxm-how-to-create-catalog-rule
      - epcc create pcm-catalog-rule name "Catalog Rule for Civil Servants" description "Catalog Rule for Civil Servants" customer_ids[0] name=Leslie_Knope catalog_id name=Ranges_Catalog_for_Special_Customers
      - |
        epcc get customer name=Leslie_Knope
  products-with-custom-data:
    description:
      short: "An example of how to create a product with custom data"
    commands:
      - | 
        epcc create pcm-product name "To Kill a Mockingbird" sku "to-kill-a-mockingbird" commodity_type physical description "a paperback book" mpn 1234-5678-ABCD  slug to-kill-a-mockingburg status live upc_ean \"123456\"
        epcc create flow name Book slug "products(book)" description "Extends the default product object with book fields" enabled true
        epcc create flow name Condition slug "products(condition)" description "Extends the default product object with condition fields" enabled true
      - |
        epcc create field name ISBN slug pcm_product_book field_type string description "International standard book number" required false enabled true order 1 omit_null false relationships.flow.data.type flow relationships.flow.data.id name=Book 
        epcc create field name Author slug pcm_product_author field_type string description "Author" required false enabled true order 1 omit_null false relationships.flow.data.type flow relationships.flow.data.id name=Book 
        epcc create field name Condition slug condition field_type string description "Condition" required false enabled true order 1 omit_null false relationships.flow.data.type flow relationships.flow.data.id name=Condition
      - |
        epcc create pcm-product-template sku=to-kill-a-mockingbird data[0].type template data[0].id name=Book data[1].type template data[1].id name=Condition
      - |
        epcc create pcm-entry name=Book pcm_product_book 9780099419785 pcm_product_author "Harper Lee" id name=To_Kill_a_Mockingbird
        epcc create pcm-entry name=Condition condition fair id name=To_Kill_a_Mockingbird
      - | 
        epcc get pcm-product sku=to-kill-a-mockingbird
  products-with-variations:
    description:
      short: "An example of how to create a product with variations"
    commands:
      - epcc create pcm-product name "Shirt" sku "shirt" slug "shirt" description "A shirt with a number of different sizes." status live commodity_type physical upc_ean \"111122223333\" mpn shirt-1243
      - epcc create pcm-variation name "Shirt Size"
      - |
        epcc create pcm-variation-option name=Shirt_Size name "Small" description "Size small"
        epcc create pcm-variation-option name=Shirt_Size name "Medium" description "Size medium"
        epcc create pcm-variation-option name=Shirt_Size name "Large" description "Size large"
      # Use -- in these so that the attribute isn't interpreted as a flag
      - |
        epcc create pcm-variation-modifier name=Shirt_Size name=Small -- attributes.type slug_append attributes.value -small
        epcc create pcm-variation-modifier name=Shirt_Size name=Medium -- attributes.type slug_append attributes.value -medium
        epcc create pcm-variation-modifier name=Shirt_Size name=Large -- attributes.type slug_append attributes.value -large
      - |
        epcc create pcm-product-variation sku=shirt data[0].type product-variation data[0].id name=Shirt_Size
      - |
        epcc create pcm-child-product sku=shirt
      - sleep 5
      - |
        epcc get pcm-child-products sku=shirt

  publish-catalog-with-bundles:
    description:
      short: "Create a sample pet store catalog with bundle products"
    commands:
      - epcc create pcm-hierarchy name "Pet Supplies" description "Pet supplies" slug "Pet-Supplies-PS0"
      - epcc create pcm-node name=Pet_Supplies name "Dog Supplies" description "Supplies for dogs" slug "Dogs-PS1"
      - epcc create pcm-product name "Fluffy Bed" sku "fluffy-bed-sku" slug "fluffy-bed" description "Fluffy and comfortable dog bed." status live commodity_type physical
      - epcc create pcm-node-product name=Pet_Supplies name=Dog_Supplies data[0].type product data[0].id sku=fluffy-bed-sku
      - epcc create pcm-product name "Squeaky Ball" sku "squeaky-ball-sku" slug "squeaky-ball" description "Grey rubber ball with satisfying sqeak." status live commodity_type physical
      - epcc create pcm-node-product name=Pet_Supplies name=Dog_Supplies data[0].type product data[0].id sku=squeaky-ball-sku
      - epcc create pcm-pricebook name "VIP Pricing" description "Special pricing for Very Important Pups."
      - |
        epcc create pcm-product-price name=VIP_Pricing currencies.USD.amount 5000 currencies.USD.includes_tax false sku fluffy-bed-sku
        epcc create pcm-product-price name=VIP_Pricing currencies.USD.amount 500 currencies.USD.includes_tax false sku squeaky-ball-sku
      - epcc create pcm-product attributes.name "SKU-less Bed and Ball Bundle" attributes.commodity_type "physical" status "live" components.dogbed.max 1 components.dogbed.min 1 components.dogbed.name "Dog Bed" components.dogbed.options[0].id alias/product/name=Fluffy_Bed/id components.dogbed.options[0].type "product" components.dogbed.options[0].quantity 1 components.dogball.max 1 components.dogball.min 1 components.dogball.name "Dog Ball" components.dogball.options[0].id alias/product/name=Squeaky_Ball/id components.dogball.options[0].type "product" components.dogball.options[0].quantity 1
      - epcc create pcm-node-product name=Pet_Supplies name=Dog_Supplies data[0].type product data[0].id name=SKU-less_Bed_and_Ball_Bundle
      - epcc create pcm-catalog name "Pet Supplies Catalog" description "Pet Supplies Catalog" pricebook_id name=VIP_Pricing hierarchy_ids[0] name=Pet_Supplies
      - epcc create pcm-catalog-release name=Pet_Supplies_Catalog  --save-as-alias pxm-how-to-publish-catalog-with-bundles-release
      # Wait for Catalog to be Published
      - epcc get pcm-catalog-release --retry-while-jq '.data.meta.release_status != "PUBLISHED"'  name=Pet_Supplies_Catalog pxm-how-to-publish-catalog-with-bundles-release


  reset:
    description:
      short: "Delete all catalogs, hierarchy and nodes"
    ignore_errors: true
    commands:
      - epcc delete pcm-product sku=shirt
      - epcc delete pcm-variation name=Shirt_Size
      - |
        epcc delete currency code=GBP
        epcc delete pcm-catalog-release name=Ranges_Catalog name=Ranges_Catalog
        epcc delete pcm-catalog-release name=Pet_Supplies_Catalog name=Pet_Supplies_Catalog
        epcc delete pcm-catalog-release name=Ranges_Catalog_for_Special_Customers name=Ranges_Catalog_for_Special_Customers
        epcc delete pcm-catalog-rule name=Catalog_Rule_for_Civil_Servants    
        epcc delete pcm-product name=BestEver_Gas_Range
        epcc delete pcm-product name=BestEver_Electric_Range
        epcc delete pcm-product name=SKU-less_Bed_and_Ball_Bundle
        epcc delete pcm-hierarchy name=Major_Appliances
        epcc delete pcm-pricebook name=Preferred_Pricing
        epcc delete pcm-pricebook name=Loyal_Civil_Servants_Pricing
        epcc delete customer name=Leslie_Knope
        epcc delete customer name=Ron_Swanson
        epcc delete pcm-product name=Fluffy_Bed
        epcc delete pcm-product name=Squeaky_Ball
        epcc delete pcm-hierarchy name=Pet_Supplies
        epcc delete pcm-pricebook name=VIP_Pricing
      - |
        epcc delete pcm-catalog name=Ranges_Catalog_for_Special_Customers
        epcc delete pcm-catalog name=Ranges_Catalog
        epcc delete pcm-catalog name=Pet_Supplies_Catalog
      - | 
        epcc delete flow name=Book
        epcc delete flow name=Condition
        epcc delete pcm-product sku=to-kill-a-mockingbird
      - sleep 2


