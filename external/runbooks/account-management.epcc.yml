name: "account-management"
description:
  long: "Sample commands for using account management"
  short: "Sample commands for using account management"
actions:
  enable-password-authentication:
    description:
      short: "Enable password authentication"
    commands:
      # Initialize alias for Authentication Realm
      - epcc get account-authentication-settings
      - epcc create password-profile related_authentication_realm_for_account_authentication_settings_last_read=entity name "Username and Password Authentication"
  enable-self-signup-and-management:
    description:
      short: "Enable password authentication"
    commands:
      # Initialize alias for Authentication Realm
      - epcc get account-authentication-settings
      - |
        epcc create password-profile related_authentication_realm_for_account_authentication_settings_last_read=entity name "Username and Password Authentication"
        epcc update account-authentication-setting enable_self_signup true auto_create_account_for_account_members true account_member_self_management "update_only"
  create-deep-hierarchy:
    description:
      short: "Create a hierarchy"
    variables:
      depth:
        type: INT
        default: 4
        description:
          short: "Depth of the hierarchy"
      width:
        type: INT
        default: 2
        description:
          short: "Width of the hierarchy"
    commands:
      # language=YAML
      - |2
        {{- range untilStep 0 $.depth  1 -}}
          {{- $d := . -}}
          {{- $total := 1 -}}
          {{- range untilStep 0 $d  1 -}}
              {{- $total = mul $total $.width | int }}
          {{ end }}
          -
          {{ range untilStep 0 $total 1 -}}
          {{- $x := . }}
            epcc create -s account name "Account_{{ $d }}_{{ $x }}" legal_name "Account at {{ $d }} {{ $x }}" {{ if ne $d 0 }} parent_id name=Account_{{ sub $d 1 }}_{{ div $x $.width }} {{ end }}
          {{ end }}
        {{ end }}


  create-singleton-account-member:
    description:
      short: "Create an account member with an account"
    variables:
      name:
        type: STRING
        default: "Ron Swanson"
        description:
          short: "Name of the account member"
      email:
        type: STRING
        default: "ron@swanson.com"
        description:
          short: "Email of the account member"
      account-name:
        type: STRING
        default: "Pawnee Parks and Recreation"
        description:
          short: "Name of the account"
      password:
        type: STRING
        default: "password"
        description:
          short: "Password (if set we will try and create a user-authentication-password-profile-info)"
    commands:
      # Initialize alias for Authentication Realm
      - epcc get -s account-authentication-settings
      # Initialize alias for password profile id
      - epcc get -s password-profiles related_authentication_realm_for_account_authentication_settings_last_read=entity
      - epcc create -s user-authentication-info related_authentication_realm_for_account_authentication_settings_last_read=entity name "{{.name}}" email "{{.email}}"
      # TODO if we ever support variables, we should check whether we actually have that alias.
      - |
        {{ if ne (len .password) 0 }}
        epcc create user-authentication-password-profile-info related_authentication_realm_for_account_authentication_settings_last_read=entity last_read=entity username "{{.email}}" password "{{.password}}" password_profile_id last_read=array[0]
        {{ end }}

      - epcc get account-member alias/user_authentication_info/last_read=entity/id
      - epcc create -s account name "{{ index . "account-name" }}" legal_name "{{ index . "account-name" }}"
      - epcc create -s account-membership last_read=entity account_member_id user_authentication_info/last_read=entity
  catalog-rule-example:
    description:
      short: "Create some catalog rules"
    variables:
      account_1_username:
        type: STRING
        default: "account1"
        description:
          short: "Username of the first account"
      account_2_username:
        type: STRING
        default: "account2"
        description:
          short: "Username of the second account"
      account_1_password:
        type: STRING
        default: "password"
        description:
          short: "Password (if set we will try and create a user-authentication-password-profile-info)"
      account_2_password:
        type: STRING
        default: "password"
        description:
          short: "Password (if set we will try and create a user-authentication-password-profile-info)"
    commands:
      - epcc get account-authentication-settings
      # Initialize alias for password profile id
      - epcc get password-profiles related_authentication_realm_for_account_authentication_settings_last_read=entity
      # TODO: Create Password Profile if one isn't enabled.

      # Create Account 1
      - epcc create account name "Account 1" legal_name "Account 1"
      - epcc create user-authentication-info related_authentication_realm_for_account_authentication_settings_last_read=entity name "Account 1" email "account1@example.com"
      - epcc create user-authentication-password-profile-info related_authentication_realm_for_account_authentication_settings_last_read=entity name=Account_1 username "{{.account_1_username}}" password "{{.account_1_password}}" password_profile_id last_read=array[0]
      - epcc get account-member alias/user_authentication_info/last_read=entity/id
      - epcc create account-membership name=Account_1 account_member_id user_authentication_info/last_read=entity
      # Create Account 2
      - epcc create account name "Account 2" legal_name "Account 2"
      - epcc create user-authentication-info related_authentication_realm_for_account_authentication_settings_last_read=entity name "Account 2" email "account2@example.com"
      - epcc create user-authentication-password-profile-info related_authentication_realm_for_account_authentication_settings_last_read=entity name=Account_2 username "{{.account_2_username}}" password "{{.account_2_password}}" password_profile_id last_read=array[0]
      - epcc get account-member alias/user_authentication_info/last_read=entity/id
      - epcc create account-membership name=Account_2 account_member_id user_authentication_info/last_read=entity
      # Create PXM Stuff
      - |
        epcc create pcm-hierarchy name "Hierarchy For Account 1" description "Hierarchy For Account 1" slug "hierarchy-account-1"
        epcc create pcm-hierarchy name "Hierarchy For Account 2" description "Hierarchy For Account 2" slug "hierarchy-account-2"
      - |
        epcc create pcm-node slug=hierarchy-account-1 name "Account 1 Node" description "Account 1 Node" slug "node-account-1"
        epcc create pcm-node slug=hierarchy-account-2 name "Account 2 Node" description "Account 2 Node" slug "node-account-2"
      - |
        epcc create pcm-product name "Account 1 Product" sku "product-account-1" slug "product-account-1" description "Account 1 Product" status live commodity_type physical upc_ean \"123\" mpn mpn-account-1
        epcc create pcm-product name "Account 2 Product" sku "product-account-2" slug "product-account-2" description "Account 2 Product" status live commodity_type physical upc_ean \"456\" mpn mpn-account-2
      - |
        epcc create pcm-node-product name=Hierarchy_For_Account_1 name=Account_1_Node data[0].type product data[0].id sku=product-account-1
        epcc create pcm-node-product name=Hierarchy_For_Account_2 name=Account_2_Node data[0].type product data[0].id sku=product-account-2

      - |
        epcc create pcm-pricebook name "Account 1 Pricebook" description "Account 1 Pricebook"
        epcc create pcm-pricebook name "Account 2 Pricebook" description "Account 2 Pricebook"
      - sleep 2
      - |
        epcc create pcm-catalog name "Account 1 Catalog" description "Account 1 Catalog" pricebook_id name=Account_1_Pricebook hierarchy_ids[0] name=Hierarchy_For_Account_1
        epcc create pcm-catalog name "Account 2 Catalog" description "Account 2 Catalog" pricebook_id name=Account_2_Pricebook hierarchy_ids[0] name=Hierarchy_For_Account_2
      - |
         epcc create pcm-catalog-release name=Account_1_Catalog --save-as-alias account-management-catalog-rule-account-1-catalog
         epcc create pcm-catalog-release name=Account_2_Catalog --save-as-alias account-management-catalog-rule-account-2-catalog
      # Wait for Catalogs to be Published
      - |
        epcc get pcm-catalog-release --retry-while-jq '.data.meta.release_status != "PUBLISHED"' name=Account_1_Catalog account-management-catalog-rule-account-1-catalog
        epcc get pcm-catalog-release --retry-while-jq '.data.meta.release_status != "PUBLISHED"' name=Account_2_Catalog account-management-catalog-rule-account-2-catalog
      - epcc get pcm-catalog-releases name=Account_1_Catalog
      - epcc get pcm-catalog-releases name=Account_2_Catalog
      - epcc create pcm-catalog-rule name "Account 1 Rule" description "Rule for Account 1" account_ids[0] name=Account_1 catalog_id name=Account_1_Catalog
      - epcc create pcm-catalog-rule name "Account 2 Rule" description "Rule for Account 2" account_ids[0] name=Account_2 catalog_id name=Account_2_Catalog
  catalog-rule-example-reset:
    description:
      short: "Reset the store configuration"
    ignore_errors: true
    commands:
      - |
        epcc delete accounts name=Account_1
        epcc delete accounts name=Account_2
        epcc delete pcm-catalog-rule name=Account_1_Rule
        epcc delete pcm-catalog-rule name=Account_2_Rule
      - |
        epcc delete pcm-catalog-release name=Account_1_Catalog name=Account_1_Catalog
        epcc delete pcm-catalog-release name=Account_2_Catalog name=Account_2_Catalog
      - |
        epcc delete pcm-catalog name=Account_1_Catalog
        epcc delete pcm-catalog name=Account_2_Catalog
      - |
        epcc delete user-authentication-info related_authentication_realm_for_account_authentication_settings_last_read=entity name=Account_1
        epcc delete user-authentication-info related_authentication_realm_for_account_authentication_settings_last_read=entity name=Account_2
        epcc delete pcm-hierarchy name=Hierarchy_For_Account_1
        epcc delete pcm-hierarchy name=Hierarchy_For_Account_2
        epcc delete pcm-product sku=product-account-1
        epcc delete pcm-product sku=product-account-2
        epcc delete pcm-pricebook name=Account_1_Pricebook
        epcc delete pcm-pricebook name=Account_2_Pricebook
        epcc delete pcm-pricebook name=Account_2_Pricebook
